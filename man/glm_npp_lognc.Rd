% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm_npp_lognc.R
\name{glm_npp_lognc}
\alias{glm_npp_lognc}
\title{Estimate logarithm of the normalizing constant for the power prior}
\usage{
glm_npp_lognc(
  formula,
  family,
  histdata,
  a0 = NULL,
  a0.n = NULL,
  beta0 = NULL,
  Sigma0 = NULL,
  offset = NULL,
  disp.shape = 2.1,
  disp.scale = 1.1,
  method = "bridge",
  nsmpl = 1000,
  bridge.args = NULL,
  ...
)
}
\arguments{
\item{formula}{an object of class \code{\link[stats]{formula}}.}

\item{family}{an object of type \code{\link[stats]{family}} giving distribution and link function}

\item{histdata}{a \code{\link[base]{data.frame}} of historical data giving all variables in \code{formula}}

\item{a0}{a vector of values between 0 and 1 giving values of the normalizing constant to compute. One of \code{a0} or \code{a0.n} must be specified}

\item{a0.n}{a positive integer giving the number of (equally spaced) values to compute the normalizing constant of the power prior. One of \code{a0} or \code{a0.n} must be specified}

\item{beta0}{mean for initial prior on regression coefficients. Defaults to vector of 0s}

\item{Sigma0}{covariance matrix for initial prior on regression coefficients. Defaults to \code{diag(100, ncol(X))}}

\item{offset}{offset in GLM. If \code{NULL}, no offset is utilized}

\item{disp.shape}{shape parameter for inverse-gamma prior on dispersion parameter (for Gaussian and gamma models). Ignored for binomial and Poisson models}

\item{disp.scale}{rate parameter for inverse-gamma prior on dispersion parameter (for Gaussian and gamma models). Ignored for binomial and Poisson models}

\item{method}{character vector giving which method to use for importance sampling. Acceptable values are \code{"bridge"} or\code{"importance"}, corresponding to bridge sampling and importance sampling, respectively}

\item{nsmpl}{(optional) number of importance samples to take (ignored if \code{method == 'bridge'})}

\item{bridge.args}{(optional) parameters to pass onto \code{bridgesampling::bridge_sampler} (otherwise, default is performed) (ignored if \code{method == 'importance'})}

\item{...}{(optional) parameters to pass onto \code{rstan::sampling} (ignored if \code{method == 'importance'})}
}
\value{
a \code{data.frame} giving a0 and the logarithm of the normalizing constant evaluted at a0
}
\description{
Estimate the logarithm of the normalizing constant via importance sampling or bridge sampling.
For importance sampling, the function uses the \code{optimizing} function in Stan to compute the prior mode and Hessian, then uses a normal approximation.
Otherwise, MCMC sampling is performed and bridge sampling is utilized to estimate the logarithm of the normalizing constant.
When a dispersion parameter is unknown, it is better to use bridge sampling (\code{method = 'bridge'}).
}
\examples{
## Generate current and historical data
set.seed(123)
n  = 30
n0 = 20
x  = rnorm(n)
x0 = rnorm(n0)
y  = rbinom(n = n,  size = 1, prob = binomial()$linkinv(1 - 0.5 * x) )
y0 = rbinom(n = n0, size = 1, prob = binomial()$linkinv(1 - 0.5 * x0) )
data = data.frame('y' = y, 'x' = x)
histdata = data.frame('y' = y0, 'x' = x0)

## Estimate logarithm of normalizing constant using bridge sampling
bridge = glm_npp_lognc(y ~ x, binomial(), histdata, a0 = c(0.10, 0.50), method = 'bridge')

## Estimate logarithm of normalizing constant using importance sampling
##   Note: for demonstration purposes only. nsmpl should be at least 10000 in practice
importance = glm_npp_lognc(y ~ x, binomial(), histdata, a0 = c(0.10, 0.50), method = 'importance', nsmpl = 2000)

## Compare results
cbind('a0' = bridge[, 1], 'bridge' = bridge[, 2], 'importance' = importance[, 2])


}
